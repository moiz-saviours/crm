name: Mirror

on:
  push:
    branches:
      - main
      - development

jobs:
  mirror-to-repos:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target_repo: ['trefid-crm']
    concurrency:
      group: mirror-${{ github.ref }}-${{ matrix.target_repo }}
      cancel-in-progress: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false  # Important!

      - name: Determine target branch
        id: target-branch
        run: |
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          echo "Current branch: $BRANCH_NAME"
          echo "target_branch=$BRANCH_NAME" >> $GITHUB_OUTPUT
          # Clear any existing credentials
          git config --global --unset-all http.https://github.com/.extraheader || true

      - name: Configure Git
        run: |
          # Store credentials securely
          echo "https://x-access-token:${{ secrets.MIRRORING_ACCESS_TOKEN }}@github.com" > ${HOME}/.git-credentials
          chmod 600 ${HOME}/.git-credentials
          git config --global credential.helper 'store --file=${HOME}/.git-credentials'

      - name: Verify repository access
        run: |
          response=$(curl -s -H "Authorization: token ${{ secrets.MIRRORING_ACCESS_TOKEN }}" \
            https://api.github.com/repos/moiz-saviours/${{ matrix.target_repo }})
          if echo "$response" | grep -q '"name":'; then
            echo "Repository verified"
          else
            echo "::error::Repository verification failed"
            echo "$response"
            exit 1
          fi

      - name: Add target remote
        run: |
          git remote remove ${{ matrix.target_repo }} || true
          git remote add ${{ matrix.target_repo }} https://github.com/moiz-saviours/${{ matrix.target_repo }}.git

      - name: Fetch from target repository
        run: |
          git fetch ${{ matrix.target_repo }} ${{ steps.target-branch.outputs.target_branch }} || echo "Branch might not exist yet"

      - name: Create branch if not exists
        run: |
          if ! git ls-remote --exit-code --heads ${{ matrix.target_repo }} ${{ steps.target-branch.outputs.target_branch }}; then
            git push ${{ matrix.target_repo }} HEAD:refs/heads/${{ steps.target-branch.outputs.target_branch }}
            exit 0
          fi

      - name: Mirror to target repository
        run: |
          # Force push to ensure exact mirroring
          git push --force ${{ matrix.target_repo }} HEAD:refs/heads/${{ steps.target-branch.outputs.target_branch }} && {
            echo "Successfully mirrored to private ${{ matrix.target_repo }}"
          } || {
            echo "::error::Failed to push to private repository"
            exit 1
          }
